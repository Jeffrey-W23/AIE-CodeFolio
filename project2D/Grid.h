// #includes, using, etc
#pragma once
#include "AStarNode.h"
#include "Renderer2D.h"
using namespace aie;

// forward declarations
struct GridNode;
class AStar;

//--------------------------------------------------------------------------------------
// Grid object.
//--------------------------------------------------------------------------------------
class Grid
{
private:

	//--------------------------------------------------------------------------------------
	// Default Constructor.
	//--------------------------------------------------------------------------------------
	Grid();

	//--------------------------------------------------------------------------------------
	// Default Destructor
	//--------------------------------------------------------------------------------------
	~Grid();
	
	//--------------------------------------------------------------------------------------
	// The one and only instance of this class
	//--------------------------------------------------------------------------------------
	static Grid* m_instance;
	
public:
	
	//--------------------------------------------------------------------------------------
	// DrawGrid: A function to render (or "draw") objects to the screen.
	//
	// Param:
	//		renderer2D: a pointer to Renderer2D for rendering objects to screen.
	//--------------------------------------------------------------------------------------
	void DrawGrid(Renderer2D* m_2dRenderer);
	
	//--------------------------------------------------------------------------------------
	// GetGrid: Get the grid.
	//
	// Returns:
	//		GetGrid: Returns a GridNode pointer.
	// Param:
	//		nIndex: An int Index for the grid index you want.
	//--------------------------------------------------------------------------------------
	GridNode* GetGrid(int nIndex);
	
	//--------------------------------------------------------------------------------------
	// create: A function for creating an instance of the Grid.
	//--------------------------------------------------------------------------------------
	static void create() { m_instance = new Grid(); }
	
	//--------------------------------------------------------------------------------------
	// destroy: A function for deleting the Grid instance.
	//--------------------------------------------------------------------------------------
	static void destroy() { delete m_instance; }
	
	//--------------------------------------------------------------------------------------
	// Instance: The function for providing access.
	//--------------------------------------------------------------------------------------
	static Grid* Instance();

protected:
	
	//--------------------------------------------------------------------------------------
	// A GridNode pointer pointer m_ppGrid.
	//--------------------------------------------------------------------------------------
	GridNode** m_ppGrid;
	
	//--------------------------------------------------------------------------------------
	// A AStar pointer m_pAstar.
	//--------------------------------------------------------------------------------------
	AStar* m_pAStar;
};