// #include, using, etc
#pragma once
#include "Renderer2D.h"
#include "Vector2.h" 
using namespace aie;

//--------------------------------------------------------------------------------------
// Enum eType. Used for setting the shape type.
//--------------------------------------------------------------------------------------
enum eType
{
	ETYPE_CIRCLE,
	ETYPE_SQR,
};

//--------------------------------------------------------------------------------------
// BaseObstacle object.
//--------------------------------------------------------------------------------------
class BaseObstacle
{
public:

	//--------------------------------------------------------------------------------------
	// Default Constructor.
	//--------------------------------------------------------------------------------------
	BaseObstacle();

	//--------------------------------------------------------------------------------------
	// Default Destructor
	//--------------------------------------------------------------------------------------
	~BaseObstacle();

	//--------------------------------------------------------------------------------------
	// Draw: A virtual function to render (or "draw") objects to the screen.
	//
	// Param:
	//		renderer2D: a pointer to Renderer2D for rendering objects to screen.
	//--------------------------------------------------------------------------------------
	virtual void Draw(Renderer2D* m_2dRenderer);

	//--------------------------------------------------------------------------------------
	// Update: A virtual function to update objects.
	//
	// Param:
	//		deltaTime: Pass in deltaTime. A number that updates per second.
	//--------------------------------------------------------------------------------------
	virtual void Update(float deltaTime);

	//--------------------------------------------------------------------------------------
	// A float for the size of the shape.
	//--------------------------------------------------------------------------------------
	float m_fSize;;

	//--------------------------------------------------------------------------------------
	// A Vector2 for the position of the shape.
	//--------------------------------------------------------------------------------------
	Vector2 m_v2Pos;

	//--------------------------------------------------------------------------------------
	// An enum of eType for what type of shape the shape is.
	//--------------------------------------------------------------------------------------
	eType m_eType;
};

